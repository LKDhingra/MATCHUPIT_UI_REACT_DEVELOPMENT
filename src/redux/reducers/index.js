import update from "immutability-helper";
import {initialState} from './InitialState'

function rootReducer(state = initialState, action) {
    switch (action.type) {
        case "SET_AUTH_TOKEN": return update(state, { authToken: { $set: action.payload } })
        case "SET_SOCIAL_LINKS": return update(state, { profile: { social_links:{ $set: action.payload }}})
        case "SET_BASIC_INFO": return update(state, { basicInfo: { $merge: action.payload } })
        case "SET_IS_MEMBER": return update(state, { is_member: { $set: action.payload } })
        case "SET_CORPORATE_VIDEO": return update(state, { basicInfo: { video_intro:{$set: action.payload } } })
        case "SET_PROFILE_INFO": return update(state, { profile: { $merge: action.payload } })
        case "SET_CORPORATE_INFO": return update(state, { basicInfo: { $merge: action.payload } })
        case "SET_WORK_AUTH_OBJ": return update(state, { profile: { personal_details: { $merge: action.payload } } })
        case "SET_EDUCATION_OBJ": return update(state, { profile: { education: { $merge: action.payload } } })
        case "SET_WORK_EXP_OBJ": return update(state, { profile: { work_experience: { $merge: action.payload } } })
        case "SET_CERTIFICATION_OBJ": return update(state, { profile: { certifications: { $merge: action.payload } } })
        case "SET_PROFILE_COMPLETION": return update(state, { profileCompletionPercentage: { $set: action.payload } })
        case "UPDATE_USER_NAME": return update(state, { basicInfo: { first_name: { $set: action.payload.first_name }, last_name: { $set: action.payload.last_name } } })
        case "UPDATE_PHONE_NO": return update(state, { basicInfo: { phone: { $set: action.payload } } })
        case "UPDATE_DIAL_CODE": return update(state, { basicInfo: { dial_code: { $set: action.payload } } })
        case "UPDATE_RECOVERY_EMAIL": return update(state, { basicInfo: { recovery_email: { $set: action.payload } } })
        case "UPDATE_COUNTRY_NAME": return update(state, { basicInfo: { country_name: { $set: action.payload } } })
        case "UPDATE_ZIPCODE": return update(state, { basicInfo: { zipcode: { $set: action.payload } } })
        case "UPDATE_ADDRESS_LINE": return update(state, { basicInfo: { address_line: { $set: action.payload } } })
        case "UPDATE_STATE_NAME": return update(state, { basicInfo: { state: { $set: action.payload } } })
        case "UPDATE_CITY_NAME": return update(state, { basicInfo: { city: { $set: action.payload } } })
        case "UPDATE_CITIZENSHIP": return update(state, { basicInfo: { citizenship: { $set: action.payload } } })
        case "UPDATE_DATE_OF_BIRTH": return update(state, { basicInfo: { dob: { $set: action.payload } } })
        case "UPDATE_PROFILE_PIC": return update(state, { basicInfo: { profile_pic: { $set: action.payload } } })
        case "UPDATE_AUTHORIZED_COUNTRY": return update(state, { basicInfo: { other_country_authorization: { $set: action.payload } } })
        case "VIEW_RESUME_LIST": return update(state, { resumeBuilder: { viewResumeList: { $set: action.payload } } })
        case "UPDATE_CURRENT_RESUME": return update(state, { resumeBuilder: { selectedResume: { $set: action.payload } } })
        case "BUILD_RESUME_STATUS": return update(state, { resumeBuilder: { buildResumeStatus: { $set: action.payload } } })
        case "SHOW_USER_RESUME": return update(state, { resumeBuilder: { showUserResume: { $set: action.payload } } })
        case "SHOW_FLAT_FORM": return update(state, { editingProfile: { $set: action.payload } })
        case "NEW_WORK_AUTH": return update(state, { profile: { personal_details: {$set:action.payload } } })
        case "ADD_WORK_AUTH_ROW": return update(state, { profile: { personal_details: { countryList: { $push: [action.payload.countryList] }, authType: { $push: [action.payload.authType] }, sponsor: { $push: [action.payload.sponsor] }, authExp: { $push: [action.payload.authExp] } } } })
        case "DELETE_WORK_AUTH_ROW": return update(state, { profile: { personal_details: { countryList: { $splice: [[action.payload, 1]] }, authType: { $splice: [[action.payload, 1]] }, sponsor: { $splice: [[action.payload, 1]] }, authExp: { $splice: [[action.payload, 1]] } } } })
        case "ADD_ADDRESS_ROW": return update(state, { profile: { address_details: { countryO: { $push: [action.payload.countryO] }, stateO: { $push: [action.payload.stateO] }, cityO: { $push: [action.payload.cityO] }, addressO: { $push: [action.payload.addressO] }, zipcodeO: { $push: [action.payload.zipcodeO] } } } })
        case "DELETE_ADDRESS_ROW": return update(state, { profile: { address_details: { countryO: { $splice: [[action.payload, 1]] }, stateO: { $splice: [[action.payload, 1]] }, cityO: { $splice: [[action.payload, 1]] }, addressO: { $splice: [[action.payload, 1]] }, zipcodeO: { $splice: [[action.payload, 1]] } } } })
        case "ADD_EDUCATION_ROW": return update(state, { profile: { education: { degree: { $push: [action.payload.degree] }, institute: { $push: [action.payload.institute] }, special: { $push: [action.payload.special] }, endM: { $push: [action.payload.eduEndM] }, startM: { $push: [action.payload.eduStartM] }, endY: { $push: [action.payload.eduEndY] }, startY: { $push: [action.payload.eduStartY] }, activities: { $push: [action.payload.activities] }, societies: { $push: [action.payload.societies] } } } })
        case "DELETE_EDUCATION_ROW":return update(state,{profile: {education: {degree: { $splice: [[action.payload, 1]] },institute: { $splice: [[action.payload, 1]] },special: { $splice: [[action.payload, 1]] }, startM: { $splice: [[action.payload, 1]] },endM: { $splice: [[action.payload, 1]] }, startY: { $splice: [[action.payload, 1]] },endY: { $splice: [[action.payload, 1]] },activities: { $splice: [[action.payload, 1]] },societies: { $splice: [[action.payload, 1]] }}}})
        case "ADD_CERTIFICATION_ROW": return update(state, { profile: { certifications: { name: { $push: [action.payload.name] }, endM: { $push: [action.payload.endM] }, endY: { $push: [action.payload.endY] }, copy: { $push: [action.payload.copy] } } } })
        case "DELETE_CERTIFICATION_ROW": return update(state, { profile: { certifications: { name: { $splice: [[action.payload, 1]] }, endM: { $splice: [[action.payload, 1]] }, endY: { $splice: [[action.payload, 1]] }, copy: { $splice: [[action.payload, 1]] } } } })
        case "ADD_WORK_EXP_ROW": return update(state, { profile: { work_experience: { industry: { $push: [action.payload.industry] },orgNames: { $push: [action.payload.orgNames] }, jobTitles: { $push: [action.payload.jobTitles] }, designations: { $push: [action.payload.designations] }, startM: { $push: [action.payload.startM] }, endM: { $push: [action.payload.endM] }, startY: { $push: [action.payload.startY] }, endY: { $push: [action.payload.endY] }, rnrs: { $push: [action.payload.rnrs] }, skillsP: { $push: [action.payload.skillsP] }, skillsO: { $push: [action.payload.skillsO] }, tillDate: {$push: [action.payload.tillDate]}, empType: {$push: [action.payload.empType]} }}})
        case "DELETE_WORK_EXP_ROW": return update(state, { profile: { work_experience: { industry: { $splice: [[action.payload, 1]] }, orgNames: { $splice: [[action.payload, 1]] }, jobTitles: { $splice: [[action.payload, 1]] }, designations: { $splice: [[action.payload, 1]] }, startM: { $splice: [[action.payload, 1]] }, endM: { $splice: [[action.payload, 1]] }, startY: { $splice: [[action.payload, 1]] }, endY: { $splice: [[action.payload, 1]] }, rnrs: { $splice: [[action.payload, 1]] }, skillsP: { $splice: [[action.payload, 1]] }, skillsO: { $splice: [[action.payload, 1]] } } } })
        case "UPDATE_HEADSHOT": return update(state, { profile: { media: { headshot: { $set: action.payload } } } })
        case "UPDATE_LIVE_VIDEO": return update(state, { profile: { media: { videoshot: { $set: action.payload } } } })
        case "SET_SALARY_MEAN": return update(state, { salary_mean: { $set: action.payload } })
        case "SET_PAYMENT_STATUS": return update(state, { basicInfo: {payment_status:{ $set: action.payload } }})
        case "SET_PAYMENT_INFO": return update(state, { payment: { $set: action.payload } })
        case "ADD_PAYMENT_INFO": return update(state, { payment: { $push: [action.payload] } })
        case "SET_OTHER_ADDRESSES": return update(state, { profile: {address_details:{ $set: action.payload } }})
        case "SET_AVAILABLE_HIRE": return update(state, { basicInfo: {available_hire:{ $set: action.payload } }})
        case "SET_CURRENTLY_HIRING": return update(state, { basicInfo: {currently_hiring:{ $set: action.payload } }})
        case "SET_ACCOUNT_HOLDER": return update(state, { accountHolder: {$set: action.payload }} )
        case "UPDATE_MEMBERS": return update(state, { accountHolder: {members:{$set: action.payload }}} )
        case "SET_PLAN_DETAILS": return update(state, { plan_details: {$set: action.payload }} )
        case "SET_ABOUT_ME": return update(state, { profile: {personal_details:{aboutMe:{$set: action.payload }}}} )
        case "SET_IS_STUDENT": return update(state, { basicInfo: {is_student:{$set: action.payload }}} )
        case "ADD_BOARD_EXPERIENCE_ROW": return update(state, {profile:{ board_experience: { boardName: { $push: [action.payload.boardName] }, boardType: { $push: [action.payload.boardType] }, stillMember: { $push: [action.payload.stillMember] }, boardStartM: { $push: [action.payload.boardStartM] }, boardEndM: { $push: [action.payload.boardEndM] }, boardStartY: { $push: [action.payload.boardStartY] }, boardEndY: { $push: [action.payload.boardEndY] }}}} )
        case "DELETE_BOARD_EXPERIENCE_ROW": return update(state, {profile:{ board_experience: { boardName: { $splice: [[action.payload,1]] }, boardType: { $splice: [[action.payload,1]] }, stillMember: { $splice: [[action.payload,1]] }, boardStartM: { $splice: [[action.payload,1]] }, boardEndM: { $splice: [[action.payload,1]] }, boardStartY: { $splice: [[action.payload,1]] }, boardEndY: { $splice: [[action.payload,1]] }}}} )
        case "SET_BOARD_EXPERIENCE_OBJ": return update(state, {profile:{ board_experience: { $merge: action.payload }}} )
        default: break;
    }
    return state;
}
export default rootReducer;
